#owner-preferences-popup.two-column-popup
  %h1 
    = link_to_function "Account preferences", nil
    = link_to_function "Plan & Billing", nil
  - remote_form_for :preferences, :url => owner_preferences_path, :html => { :method => :put } do |f|
    - f.fields_for @owner do |owner|
      .account.inputs
        .inputs-row
          .title-input.username
            .title Update your name
            .label-input
              = owner.text_field 'user_name'
              = owner.label 'user_name', 'John Doe'
          .title-input.email
            .title Update your email
            .label-input
              = owner.text_field 'email'
              = owner.label 'email', 'John@gmail.com'
        .inputs-row
          .title-input.domain
            .title Change subdomain name
            .label-input
              = owner.text_field 'domain_name'
              = owner.label 'domain_name', 'mycompany'
          .title-input.editfu_com
            .label-input .#{BASE_DOMAIN}
        .inputs-row
          .title-input.current-password
            .title Change your password
            .label-input
              = owner.password_field 'current_password'
              = owner.label 'current_password'
          .title-input.password
            .label-input
              = owner.password_field 'password'
              = owner.label 'password', 'New password'
          .title-input.password-confirmation
            .label-input
              = owner.password_field 'password_confirmation'
              = owner.label 'password_confirmation', 'Confirm password'
        .inputs-row
          .title-input.email
            .title Your company name
            .label-input
              = owner.text_field 'company_name'
              = owner.label 'company_name', 'My Great Company'
            %small.description
              Place your company name above to give EditFu your own branding. 
              = link_to_remote "Return the default EditFu logo", :url => identity_owner_preferences_path, :method => :post, :html => { :class => :red }
        .clear
      .plan_and_billing

      .plan.section
        %h2 Plan
        .plan-wrapper
          = owner.radio_button 'plan', 'professional', :class => 'radio'
          .plan-label{selected_class(@owner.plan == 'professional')}
            %label(for='preferences_owner_plan_professional')
            %dl
              %dt Pro $24
              %dd
                %ul 
                  %li Unlimited Sites
                  %li Unlimited Pages
                  %li Unlimited Editors
            %small Current
                
          = owner.radio_button 'plan', 'free', :class => 'radio'
          .plan-label{selected_class(@owner.plan == 'free')}
            %label(for='preferences_owner_plan_free')
            %dl
              %dt Free
              %dd
                %ul 
                  %li 1 Site
                  %li 3 Pages
                  %li No Editors
            %small Current

          - if @owner.plan == 'trial'
            = owner.radio_button 'plan', 'trial', :class => 'radio'
            .plan-label.selected
              %label(for='preferences_owner_plan_trial')
              %dl
                %dt Trial
                %dd
                  %ul 
                    %li Unlimited Sites
                    %li Unlimited Pages
                    %li Unlimited Editors
                    %li.ends 
                      = "Ends #{@owner.trial_period_end}"
              %small Current
          - if @owner.unlimited_trial?
            .plan-label.selected
              %label(for='preferences_owner_plan_unlimited_trial')
              %dl
                %dt Buddy
                %dd
                  %ul 
                    %li Unlimited Sites
                    %li Unlimited Pages
                    %li Unlimited Editors
                    %li.ends 
                      = "Never end"
              %small Current
        .clear
        %small.description Click on a different package to upgrade or downgarde...
    = set_elements_max_height
    - f.fields_for :card, @card do |card|
      .billing.inputs
        %h2 Billing
        .inputs-row
          .title-input.card-number
            .title Credit card number
            .label-input
              = card.text_field 'number'
              = card.label 'number',  @owner.card_number || '1234 5678 9123 4567', :class => ("filled" if @owner.card_number)
          .title-input.exp-date
            .title Expiration date
            .label-input
              = card.text_field 'expiration'
              = card.label 'expiration', @owner.card_exp_date ||'02/2020', :class => ("filled" if @owner.card_exp_date)
          .title-input.verification-value
            .title Security code
            .label-input
              = card.text_field 'verification_value'
              = card.label 'verification_value', '123'
          .title-input
            .label-input
              = image_tag 'visa.png'
              = image_tag 'master-card.png'
              = image_tag 'cards.png'
        .inputs-row
          .title-input.first-name
            .title First name
            .label-input
              = card.text_field 'first_name'
              = card.label 'first_name', 'John'
          .title-input.last-name
            .title Last name
            .label-input
              = card.text_field 'last_name'
              = card.label 'last_name', 'Doe'
          .title-input.zip
            .title Zip code
            .label-input
              = card.text_field 'zip'
              = card.label 'zip', '10005'
          - if @owner.plan == 'professional'
            - if @owner.prev_billing_date
              .title-input.prev-billing-date
                .label-input
                  .inner-title Last billing date
                  %span= @owner.prev_billing_date
            .title-input.next-billing-date
              .label-input
                .inner-title Next billing date
                %span= @owner.next_billing_date
        .clear

    .popup-action-bar
      = link_to_remove owner_path, 'Cancel My Account', |
        'Are you sure you want to cancel this EditFu account? This cannot be undone. The sites connected to EdtiFu will not be affected. All editors, ftp data, and other account information related to EditFu databases will be deleted. We suggest you simply downgrade to the free account. To use EditFu again in the future you will have to create a new account.' |
      = f.submit "Update"
      = link_to_function "Cancel", "hidePopup();", :class => 'action cancel'
